// ESP32 Simulation
#include <Wire.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_MS5837.h>
#include <Adafruit_TCA9548A.h>

// WiFi credentials
const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";

// Server URL
const char* serverUrl = "http://your_server_ip:5000/data";

Adafruit_TCA9548A tca = Adafruit_TCA9548A();
Adafruit_MS5837 sensors[5]; // Array for 5 sensors

void setup() {
  Serial.begin(115200);
  Wire.begin();

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  if (!tca.begin()) {
    Serial.println("Couldn't find TCA9548A!");
    while (1);
  }
  
  for (uint8_t i = 0; i < 5; i++) {
    tca.switchChannel(i); // Select the channel
    if (!sensors[i].begin()) {
      Serial.print("Sensor ");
      Serial.print(i);
      Serial.println(" not found!");
      while (1);
    }
  }
  
  Serial.println("All sensors found!");
}

void loop() {
  String jsonData = "{";
  
  for (uint8_t i = 0; i < 5; i++) {
    tca.switchChannel(i); // Select the channel
    sensors[i].read(); // Read data from the sensor
    
    jsonData += "\"sensor" + String(i) + "\": {";
    jsonData += "\"pressure\": " + String(sensors[i].pressure(), 2) + ", ";
    jsonData += "\"temperature\": " + String(sensors[i].temperature(), 2);
    jsonData += "}";
    
    if (i < 4) jsonData += ", ";
  }
  
  jsonData += "}";

  if(WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverUrl);
    http.addHeader("Content-Type", "application/json");
    
    int httpResponseCode = http.POST(jsonData);
    
    if(httpResponseCode > 0) {
      String response = http.getString();
      Serial.println(httpResponseCode);
      Serial.println(response);
    } else {
      Serial.print("Error on sending POST: ");
      Serial.println(httpResponseCode);
    }
    
    http.end();
  }
  
  delay(10000); // Send data every 10 seconds
}
